{"version":3,"sources":["components/layout/Navbar.js","context/entry/entryContext.js","context/preference/preferenceContext.js","components/timeentry/Entry.js","components/timeentry/NewEntry.js","helpers/time.js","components/timeentry/Entries.js","context/health/healthContext.js","components/layout/Calendar.js","components/timeentry/EditEntry.js","components/layout/Preferences.js","components/Music.js","components/layout/Main.js","context/entry/entryReducer.js","context/types.js","context/entry/entryState.js","context/health/healthReducer.js","context/health/healthState.js","context/preference/preferenceReducer.js","context/preference/preferenceState.js","App.js","index.js"],"names":["Navbar","title","className","id","defaultProps","EntryContext","createContext","PreferenceContext","Entry","entry","showBtns","entryContext","useContext","preferencesContext","PreferencesContext","name","time","entered","running","onChange","e","a","entryUpdate","target","checked","updateTimeEntry","startEntry","startTime","Date","now","timespent","lastStartCount","getTimeSpent","millis","Math","floor","copyEntry","newEntry","date","toISOString","split","createTimeEntry","startNext","type","style","textAlign","onClick","class","startnextonstop","window","confirm","deleteTimeEntry","href","setCurrent","NewEntry","useState","setEntry","valid","useEffect","document","addEventListener","elems","querySelectorAll","M","Modal","init","buttons","createEntry","hms","seconds","length","parseInt","savedEntry","project","elem","querySelector","getInstance","open","clearEntry","disabled","placeholder","value","secondsToTime","timeInSeconds","lpad","num","s","substr","Entries","entries","data","setData","forEach","element","map","key","_id","HealthContext","Calendar","setDate","getTimeEntries","todayButton","selected","newDate","console","log","EditEntry","current","saveRecord","undefined","pattern","parseFloat","hours","minutes","toFixed","Preferences","setStartNextOnStop","useAudio","url","play","Audio","audio","playing","setPlaying","pause","removeEventListener","Main","healthContext","healthy","playSound","Music","process","ding","dingding","checkHealth","setInterval","updateTick","getHealth","online","d","n","getMinutes","toggle","setTimeout","role","state","action","formattedPayload","payload","push","formatEntry","loading","filter","entryData","newData","billable","ceil","EntryState","props","initialState","useReducer","EntryReducer","dispatch","fromCache","viewDate","timeEntries","axios","get","formatDate","res","formatedEntries","unshift","addTimeEntry","JSON","stringify","post","delete","clearCurrent","day","getDate","month","getMonth","year","getFullYear","Provider","children","HealthState","HealthReducer","filterbybilleable","PreferenceState","PreferenceReducer","setFilter","clearFilter","App","AutoInit","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cdfc1738.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Navbar = ({ title }) => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper black\">\n        <div className=\"brand-logo\">A+ Time Tracker</div>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nNavbar.defaultProps = {\n  title: 'NAV'\n};\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default Navbar\n","import { createContext } from 'react';\n\nconst EntryContext = createContext();\n\nexport default EntryContext;","import { createContext } from 'react';\n\nconst PreferenceContext = createContext();\n\nexport default PreferenceContext;","import React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport EntryContext from '../../context/entry/entryContext';\nimport PreferencesContext from '../../context/preference/preferenceContext';\n\nconst Entry = ({ entry, showBtns }) => {\n  const entryContext = useContext(EntryContext);\n  const preferencesContext = useContext(PreferencesContext);\n\n  const { name,\n    time,\n    entered,\n    running\n  } = entry;\n\n  const onChange = async e => {\n    const entryUpdate = {\n      ...entry,\n      [e.target.name]: e.target.checked\n    }\n\n    await entryContext.updateTimeEntry(entryUpdate);\n  }\n\n  const startEntry = async () => {\n    const startTime = Date.now() - (entry.timespent * 1000);\n\n    const entryUpdate = {\n      ...entry,\n      running: true,\n      startTime: startTime,\n      lastStartCount: entry.timespent\n    }\n    await entryContext.updateTimeEntry(entryUpdate);\n  }\n\n  const stopEntry = () => {\n    const entryUpdate = {\n      ...entry,\n      running: false,\n      timespent: getTimeSpent()\n    }\n    entryContext.updateTimeEntry(entryUpdate);\n\n    if (preferencesContext.startnextonstop) {\n      startNext();\n    }\n  }\n\n  const deleteEntry = () => {\n    if (window.confirm('Are you sure you want to delete this entry?')) {\n      entryContext.deleteTimeEntry({ ...entry });\n    }\n  }\n\n  const getTimeSpent = () => {\n    const millis = Date.now() - entry.startTime;\n    return Math.floor(millis / 1000);\n  }\n\n  const addfive = () => {\n    const MS_PER_MINUTE = 60000;\n    const entryUpdate = {\n      ...entry\n    }\n    if (entry.running === true) {\n      entryUpdate.startTime = entryUpdate.startTime - (5 * MS_PER_MINUTE);\n    } else {\n      entryUpdate.timespent += 5 * 60;\n      entryUpdate.startTime = Date.now() - (entryUpdate.timespent * 1000);\n    }\n    entryContext.updateTimeEntry(entryUpdate);\n  }\n\n  const showEdit = e => {\n    entryContext.setCurrent(entry);\n  }\n\n  const copyEntry = async () => {\n    const newEntry = {\n      ...entry,\n      running: true,\n      timespent: 0,\n      startTime: Date.now(),\n      date: new Date().toISOString().split('T')[0]\n    }\n\n    await entryContext.createTimeEntry(newEntry);\n  }\n\n  const startNext = async () => {\n    const newEntry = {\n      name: '',\n      entered: false,\n      running: true,\n      timespent: 0,\n      startTime: Date.now(),\n      date: new Date().toISOString().split('T')[0]\n    }\n\n    entryContext.createTimeEntry(newEntry);\n  }\n\n  return (\n    <Fragment>\n      <tr className={running && 'yellow lighten-4'}>\n        <td>{name}</td>\n        <td>{time}</td>\n        <td>\n          <label>\n            <input type=\"checkbox\" name=\"entered\" checked={entered} onChange={onChange} />\n            <span></span>\n          </label>\n        </td>\n        {showBtns && (\n          <td style={{ textAlign: \"right\" }}>\n            {!running && (\n              <button type=\"button\" className=\"waves-effect waves-light btn-flat\" onClick={startEntry}>\n                <i class=\"material-icons green-text\">play_arrow</i>\n              </button>\n            )}\n            {running && (\n              <Fragment>\n                {/* <button type=\"button\" className=\"btn btn-sm btn-warning\"><i class=\"far fa-times-circle\"></i></button> */}\n                <button type=\"button\" className=\"waves-effect waves-light btn-flat\" onClick={stopEntry}>\n                  <i class=\"material-icons red-text\">stop</i>\n                </button>\n              </Fragment>\n            )}\n            <button type=\"button\" className=\"waves-effect waves-light btn-flat\" onClick={addfive}>\n              <i class=\"material-icons blue-text\">add_alarm</i>\n            </button>\n\n            <button type=\"button\" className=\"waves-effect waves-light btn-flat\" onClick={deleteEntry}>\n              <i class=\"material-icons\">delete_forever</i>\n            </button>\n\n            <button className=\"waves-effect waves-light btn-flat modal-trigger\" href=\"#modal1\" onClick={showEdit}>\n              <i class=\"material-icons\">edit</i>\n            </button>\n\n            <button className=\"waves-effect waves-light btn-flat modal-trigger\" onClick={copyEntry}>\n              <i class=\"material-icons\">file_copy</i>\n            </button>\n          </td>\n        )}\n      </tr>\n    </Fragment>\n  )\n}\n\nEntry.propTypes = {\n  entry: PropTypes.object.isRequired,\n  showBtns: PropTypes.bool.isRequired,\n}\nexport default Entry\n","import React, { Fragment, useState, useContext, useEffect } from 'react'\nimport EntryContext from '../../context/entry/entryContext';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst NewEntry = () => {\n  const entryContext = useContext(EntryContext);\n\n  const [entry, setEntry] = useState({\n    name: '',\n    time: '0:00:00',\n    entered: false,\n    timespent: 0,\n  });\n\n  const [valid] = useState({\n    name: true\n  });\n\n  const { name, time } = entry;\n\n  useEffect(() => {\n    // Init Materialize JS\n    document.addEventListener('DOMContentLoaded', function () {\n      var elems = document.querySelectorAll('.modal');\n      M.Modal.init(elems);\n    });\n  });\n\n  const onChange = e => {\n    setEntry({ ...entry, [e.target.name]: e.target.value });\n    // setValid({ ...valid, [e.target.name]: e.target.value !== '' });\n  }\n\n  const onTimeChange = e => {\n    setEntry({ ...entry, time: e.target.value });\n  }\n\n  const createEntry = async () => {\n    const hms = time.split(':');\n    let seconds = 0;\n    if (hms.length === 3) {\n      seconds = parseInt(hms[0]) * 60 * 60;\n      seconds += parseInt(hms[1]) * 60;\n      seconds += parseInt(hms[2]);\n    }\n\n    const newEntry = {\n      ...entry,\n      running: true,\n      timespent: seconds,\n      startTime: Date.now() - (seconds * 1000)\n    }\n\n    const savedEntry = await entryContext.createTimeEntry(newEntry);\n    await entryContext.setCurrent({ ...savedEntry });\n\n    if (savedEntry.name === '' || savedEntry.project === '') {\n      var elem = document.querySelector('#modal1');\n      var instance = M.Modal.getInstance(elem);\n      instance.open();\n    }\n    clearEntry();\n  }\n\n  const clearEntry = () => {\n    setEntry({\n      ...entry,\n      name: '',\n      entered: false,\n      timespent: 0,\n      time: '00:00:00',\n    });\n    // setValid({});\n  }\n\n  let buttons;\n  if (valid.name) {\n    buttons =\n      <Fragment>\n        <button type=\"button\" className=\"waves-effect waves-light btn-flat\" onClick={createEntry}>\n          <i class=\"material-icons green-text\">play_arrow</i>\n        </button>\n\n        <button type=\"button\" className=\"waves-effect waves-light btn-flat\" onClick={clearEntry}>\n          <i class=\"material-icons red-text\">delete_forever</i>\n        </button>\n      </Fragment>\n  } else {\n    buttons = <Fragment>\n      <button type=\"button\" className=\"waves-effect waves-light btn-flat\" disabled=\"true\">\n        <i class=\"material-icons\">play_arrow</i>\n      </button>\n      <button type=\"button\" className=\"waves-effect waves-light btn-flat\" disabled=\"true\">\n        <i class=\"material-icons\">delete_forever</i>\n      </button>\n    </Fragment>\n  }\n\n  return (\n    <Fragment>\n      <tr>\n        <td>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={onChange}\n          /></td>\n        <td>\n          <input\n            type='text'\n            placeholder='00:00:00'\n            name='time'\n            value={time}\n            onChange={onTimeChange}\n          />\n        </td>\n        <td>\n\n        </td>\n        <td style={{ textAlign: \"right\" }}>\n          {buttons}\n        </td>\n      </tr>\n    </Fragment >\n  )\n}\n\nexport default NewEntry\n","export const secondsToTime = (timeInSeconds) => {\n  const hours = lpad(Math.floor(timeInSeconds / 3600));\n  const minutes = lpad((Math.floor(timeInSeconds % 3600 / 60)));\n  const seconds = lpad((Math.floor(timeInSeconds % 3600 % 60)));\n\n  return hours + ':' + minutes + ':' + seconds;\n}\n\nconst lpad = (num) => {\n  const s = '0' + num;\n  return s.substr(s.length - 2);\n}","import React, { Fragment, useContext, useState, useEffect } from 'react'\nimport Entry from './Entry';\nimport EntryContext from '../../context/entry/entryContext';\nimport NewEntry from './NewEntry';\nimport { secondsToTime } from '../../helpers/time';\n\nconst Entries = () => {\n  const entryContext = useContext(EntryContext);\n  const { entries } = entryContext;\n\n  const [data, setData] = useState({\n    time: '0:00:00'\n  });\n\n  useEffect(() => {\n    let seconds = 0;\n\n    entries.forEach(element => {\n      seconds += element.timespent;\n    });\n\n\n    setData({ ...data, time: secondsToTime(seconds) });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [entries]);\n\n  return (\n    <Fragment>\n      <table className=\"striped\" >\n        <thead className=\"grey darken-3\">\n          <tr>\n            <th className=\"white-text grey darken-3\">Task</th>\n            <th className=\"white-text grey darken-3\">Time</th>\n            <th className=\"white-text grey darken-3\">Entered</th>\n            <th className=\"white-text grey darken-3\"></th>\n          </tr>\n        </thead>\n        <tbody>\n          <NewEntry />\n          {entries.map(entry =>\n            <Entry key={entry._id} entry={entry} showBtns={true} />\n          )}\n        </tbody>\n        <tr>\n          <td>\n            Total\n          </td>\n          <td>{data.time}</td>\n        </tr>\n      </table>\n    </Fragment>\n  )\n}\n\nexport default Entries\n","import { createContext } from 'react';\n\nconst HealthContext = createContext();\n\nexport default HealthContext;","import React, { Fragment, useContext } from 'react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport EntryContext from '../../context/entry/entryContext';\n\nconst Calendar = () => {\n  const entryContext = useContext(EntryContext);\n  const { date, setDate, getTimeEntries } = entryContext;\n\n  const dateChange = newDate => {\n    console.log(newDate, date);\n    setDate(newDate);\n    getTimeEntries(false, newDate);\n  }\n\n  return (\n    <Fragment>\n      <DatePicker todayButton=\"Today\" selected={date} onChange={dateChange} />\n    </Fragment>\n  )\n}\n\nexport default Calendar\n","import React, { Fragment, useContext } from 'react'\nimport EntryContext from '../../context/entry/entryContext';\n\nconst EditEntry = () => {\n  const entryContext = useContext(EntryContext);\n  const { current, setCurrent, updateTimeEntry } = entryContext;\n\n  const onChange = e => {\n    setCurrent({ ...current, [e.target.name]: e.target.value });\n    // setValid({ ...valid, [e.target.name]: e.target.value !== '' });\n  }\n\n  const onTimeChange = e => {\n    if (e.target.name === 'time') {\n      const hms = e.target.value.split(':');\n      var seconds = 0;\n      if (hms.length === 3) {\n        seconds = parseInt(hms[0]) * 60 * 60;\n        seconds += parseInt(hms[1]) * 60;\n        seconds += parseInt(hms[2]);\n      }\n      setCurrent({ ...current, time: e.target.value, timespent: seconds });\n    } else if (e.target.name === 'hours') {\n      let value = parseFloat(e.target.value);\n      if (e.target.value === '') {\n        value = 0;\n      }\n      const hours = Math.floor(value);\n      let minutes = Math.floor((value * 60) - (hours * 60));\n\n      if (minutes < 10) { minutes = \"0\" + minutes; }\n      if (value > 0) value = value.toFixed(2);\n\n      setCurrent({ ...current, time: hours + ':' + minutes + ':00', hours: value });\n    }\n    // setValid({ ...valid, [e.target.name]: e.target.value !== '' });\n  }\n\n  const onBoxChange = e => {\n    // console.log(e.target.name, e.target.checked);\n    setCurrent({ ...current, [e.target.name]: e.target.checked });\n  }\n\n  const saveRecord = async () => {\n    await updateTimeEntry(current);\n  }\n\n  if (current === undefined) {\n    return <Fragment>\n    </Fragment>\n  }\n\n  return (\n    <Fragment>\n      <div id=\"modal1\" className=\"modal\">\n        <div className=\"modal-content\">\n          <h4>Edit Entry</h4>\n          <div>\n            <input\n              type='text'\n              placeholder='Name'\n              name='name'\n              value={current.name}\n              onChange={onChange}\n            />\n          </div>\n          <div>\n            {!current.running && (\n              <input\n                type='text'\n                pattern=\"[0-9]{2}:[0-9]{2}:[0-9]{2}\"\n                title=\"Time 00:00:00\"\n                placeholder='00:00:00'\n                name='time'\n                value={current.time}\n                onChange={onTimeChange}\n              />\n            )}\n          </div>\n          <div>\n            <label>\n              <input type=\"checkbox\" className=\"filled-in\" name=\"entered\" checked={current.entered} onChange={onBoxChange} />\n              <span>Entered</span>\n            </label>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <a href=\"#!\" className=\"modal-close waves-effect waves-green btn-flat\" onClick={saveRecord}>Save</a>\n        </div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default EditEntry\n","import React, { useContext, Fragment } from 'react'\nimport PreferencesContext from '../../context/preference/preferenceContext';\n\nexport const Preferences = () => {\n  const preferencesContext = useContext(PreferencesContext);\n  const { setStartNextOnStop } = preferencesContext;\n  const onStartNextChange = e => {\n    // console.log(e.target.name, e.target.checked);\n    setStartNextOnStop(e.target.checked);\n  }\n\n  return (\n    <Fragment>\n      <label>\n        <input type=\"checkbox\" name=\"startnextonstop\" checked={preferencesContext.startnextonstop} onChange={onStartNextChange} />\n        <span>Start next on Stop</span>\n      </label>\n    </Fragment>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\n\nconst useAudio = ({ url, play }) => {\n    const [audio] = useState(new Audio(url));\n    const [playing, setPlaying] = useState(play);\n\n    const toggle = () => setPlaying(!playing);\n\n    useEffect(() => {\n        playing ? audio.play() : audio.pause();\n    },\n        [playing]\n    );\n\n    useEffect(() => {\n        audio.addEventListener('ended', () => {\n            setPlaying(false)\n        });\n        return () => {\n            audio.removeEventListener('ended', () => setPlaying(false));\n        };\n    }, []);\n\n    return [playing, toggle];\n};\n\n// const Player = ({ url }) => {\n//     const [playing, toggle] = useAudio(url);\n\n//     return (\n//         <div>\n//             {play}\n//             <button onClick={toggle}>{playing ? \"Pause\" : \"Play\"}</button>\n//         </div>\n//     );\n// };\n\nexport default useAudio;","import React, { useEffect, useContext, useState } from 'react'\n\nimport Entries from '../timeentry/Entries';\nimport HealthContext from '../../context/health/healthContext';\nimport EntryContext from '../../context/entry/entryContext';\nimport Calendar from './Calendar';\nimport EditEntry from '../timeentry/EditEntry';\nimport { Preferences } from './Preferences';\n\nimport Music from '../Music';\n\nconst Main = () => {\n  const healthContext = useContext(HealthContext);\n  const entryContext = useContext(EntryContext);\n  const { healthy } = healthContext;\n  const [playSound, setPlaySound] = useState(false);\n  const [ding] = useState(Music({ play: playSound, url: `${process.env.PUBLIC_URL}/ding-sound-effect_2.mp3` }))\n  const [dingding] = useState(Music({ play: playSound, url: `${process.env.PUBLIC_URL}/Ding-ding-ding.mp3` }))\n\n  useEffect(() => {\n    checkHealth();\n    entryContext.getTimeEntries();\n    setInterval(updateTick, 1000);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const checkHealth = async () => {\n    const online = await healthContext.getHealth();\n    console.log('Health Checked: ' + online);\n\n    var d = new Date();\n    var n = d.getMinutes();\n    console.log(n);\n    if (n == 50) {\n      const [playing, toggle] = ding;\n      toggle();\n    } else if (n == 0) {\n      const [playing, toggle] = dingding;\n      toggle();\n    }\n    if (online) {\n      setTimeout(checkHealth, 60000);\n    } else {\n      setTimeout(checkHealth, 15000);\n    }\n  }\n\n  const updateTick = () => {\n    entryContext.getTimeEntries(true);\n  }\n\n  if (!healthy) {\n    return (\n      <main role=\"main\" className=\"container\">\n        Server is Offline.\n      </main>\n    )\n  }\n  return (\n    <main role=\"main\" className=\"container\">\n      <Calendar />\n      <Preferences />\n      <Entries />\n      <EditEntry />\n\n    </main>\n  )\n}\n\nexport default Main\n","import {\n  REFORMAT_ENTRIES,\n  SET_ENTRIES,\n  ADD_ENTRY,\n  UPDATE_ENTRY,\n  DELETE_ENTRY,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SET_DATE\n} from '../types';\n\nimport { secondsToTime } from '../../helpers/time';\n\nexport default (state, action) => {\n  const formattedPayload = [];\n  switch (action.type) {\n    case SET_ENTRIES:\n      action.payload.forEach(element => {\n        formattedPayload.push(formatEntry(element));\n      });\n\n      return {\n        ...state,\n        entries: formattedPayload,\n        loading: false\n      }\n    case REFORMAT_ENTRIES:\n      state.entries.forEach(element => {\n        formattedPayload.push(formatEntry(element));\n      });\n\n      return {\n        ...state,\n        entries: formattedPayload,\n        loading: false\n      }\n    case ADD_ENTRY:\n      return {\n        ...state,\n        entries: [formatEntry(action.payload), ...state.entries],\n        loading: false\n      };\n    case UPDATE_ENTRY:\n      return {\n        ...state,\n        entries: state.entries.map(entry =>\n          entry._id === action.payload._id ? formatEntry(action.payload) : entry\n        ),\n        loading: false\n      };\n    case DELETE_ENTRY:\n      return {\n        ...state,\n        entries: state.entries.filter(\n          entry => entry._id !== action.payload\n        ),\n        loading: false\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n        loading: false\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: undefined,\n        loading: false\n      };\n    case SET_DATE:\n      return {\n        ...state,\n        date: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nconst formatEntry = (entryData) => {\n  const newData = { ...entryData };\n  if (newData.running) {\n    newData.timespent = getTimeSpent(newData.startTime);\n  }\n  if (newData.billable) {\n    newData.hours = (Math.ceil(newData.timespent / 900) * .25).toFixed(2);\n  } else {\n    newData.hours = '0.00';\n  }\n  newData.time = secondsToTime(newData.timespent);\n  return newData;\n}\n\nconst getTimeSpent = (startTime) => {\n  const millis = Date.now() - startTime;\n  return Math.floor(millis / 1000);\n}","//Health\nexport const SET_HEALTH = 'SET_HEALTH';\n\n//Entries\nexport const REFORMAT_ENTRIES = 'REFORMAT_ENTRIES';\nexport const SET_ENTRIES = 'SET_ENTRIES';\nexport const ADD_ENTRY = 'ADD_ENTRY';\nexport const UPDATE_ENTRY = 'UPDATE_ENTRY';\nexport const DELETE_ENTRY = 'DELETE_ENTRY';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const SET_DATE = 'SET_DATE';\n\n//Preferences\nexport const SET_STARTNEXT_ONSTOP = 'SET_STARTNEXT_ONSTOP';\nexport const SET_FILTER = 'SET_FILTER';\nexport const CLEAR_FILTER = 'CLEAR_FILTER';","import React, { useReducer } from 'react'\nimport axios from 'axios';\nimport EntryContext from './entryContext';\nimport EntryReducer from './entryReducer';\n\nimport {\n  REFORMAT_ENTRIES,\n  SET_ENTRIES,\n  ADD_ENTRY,\n  DELETE_ENTRY,\n  UPDATE_ENTRY,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  SET_DATE\n} from '../types';\n\nconst EntryState = props => {\n  const initialState = {\n    entries: [],\n    current: {},\n    loading: false,\n    date: new Date(Date.now()),\n  };\n\n  const [state, dispatch] = useReducer(EntryReducer, initialState);\n\n  const getTimeEntries = async (fromCache, viewDate) => {\n\n    // setLoading();\n    var timeEntries = state.entries;\n    viewDate = viewDate ? viewDate : state.date;\n    if (!fromCache) {\n      const res = await axios.get(`/api/v1/tasks/${formatDate(viewDate)}`);\n      timeEntries = res.data;\n\n      const formatedEntries = [];\n      timeEntries.forEach(element => {\n        formatedEntries.unshift(element);\n      });\n\n      dispatch({\n        type: SET_ENTRIES,\n        payload: formatedEntries\n      })\n    } else {\n      dispatch({\n        type: REFORMAT_ENTRIES\n      })\n    }\n\n\n  }\n\n  const addTimeEntry = async (entry) => {\n    console.log(JSON.stringify(entry));\n    // setLoading();\n\n    const newEntry = await axios.post(`/api/v1/tasks`, entry);\n\n    dispatch({\n      type: ADD_ENTRY,\n      payload: newEntry.data\n    })\n\n    return newEntry.data;\n  }\n\n  const updateTimeEntry = async (entry) => {\n    console.log('Update' + JSON.stringify(entry));\n    // setLoading();\n\n    await axios.post(`/api/v1/tasks/` + entry._id, { ...entry, _id: undefined });\n\n    dispatch({\n      type: UPDATE_ENTRY,\n      payload: entry\n    })\n  }\n\n  const deleteTimeEntry = async (entry) => {\n    console.log('Delete' + JSON.stringify(entry));\n    // setLoading();\n\n    await axios.delete(`/api/v1/tasks/` + entry._id, { ...entry });\n\n    dispatch({\n      type: DELETE_ENTRY,\n      payload: entry._id\n    })\n  }\n\n  const setCurrent = async (entry) => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: entry\n    })\n  }\n\n  const clearCurrent = async (entry) => {\n    dispatch({\n      type: CLEAR_CURRENT\n    })\n  }\n\n  const setDate = (newDate) => {\n    dispatch({\n      type: SET_DATE,\n      payload: newDate\n    })\n  }\n\n  //Private\n\n  const formatDate = (date) => {\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n\n\n    if (month < 10) month = '0' + month;\n    if (day < 10) day = '0' + day;\n\n    return `${year}-${month}-${day}`;\n  }\n  return (\n    <EntryContext.Provider\n      value={{\n        entries: state.entries,\n        current: state.current,\n        loading: state.loading,\n        date: state.date,\n        getTimeEntries,\n        createTimeEntry: addTimeEntry,\n        updateTimeEntry,\n        deleteTimeEntry,\n        setCurrent,\n        clearCurrent,\n        setDate\n      }}\n    >\n      {props.children}\n    </EntryContext.Provider>\n  );\n};\n\nexport default EntryState;","import {\n  SET_HEALTH\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_HEALTH:\n      return {\n        ...state,\n        healthy: action.payload\n      }\n    default:\n      return state;\n  }\n}","import React, { useReducer } from 'react'\nimport axios from 'axios';\nimport HealthContext from './healthContext';\nimport HealthReducer from './healthReducer';\n\nimport {\n  SET_HEALTH\n} from '../types';\n\nconst HealthState = props => {\n  const initialState = {\n    healthy: true\n  };\n\n  const [state, dispatch] = useReducer(HealthReducer, initialState);\n\n  const getHealth = async () => {\n    // setLoading();\n    try {\n      const res = await axios.get(`/health`);\n      dispatch({\n        type: SET_HEALTH,\n        payload: res.data.online\n      })\n      return res.data.online;\n    } catch (error) {\n      dispatch({\n        type: SET_HEALTH,\n        payload: false\n      })\n      return false;\n    }\n  }\n\n  return (\n    <HealthContext.Provider\n      value={{\n        healthy: state.healthy,\n        getHealth\n      }}\n    >\n      {props.children}\n    </HealthContext.Provider>\n  );\n};\n\nexport default HealthState;","import {\n  SET_STARTNEXT_ONSTOP,\n  SET_FILTER,\n  CLEAR_FILTER,\n} from '../types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_STARTNEXT_ONSTOP:\n      return {\n        ...state,\n        startnextonstop: action.payload\n      };\n    case SET_FILTER:\n      return {\n        ...state,\n        filterbybilleable: true,\n        loading: false\n      };\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filterbybilleable: false,\n        loading: false\n      };\n    default:\n      return state;\n  }\n}","import React, { useReducer } from 'react'\nimport PreferenceReducer from './preferenceReducer';\nimport PrefenceContext from './preferenceContext';\n\nimport {\n  SET_STARTNEXT_ONSTOP,\n  SET_FILTER,\n  CLEAR_FILTER,\n} from '../types';\n\nconst PreferenceState = props => {\n  const initialState = {\n    startnextonstop: true,\n    filterbybilleable: false,\n  };\n\n  const [state, dispatch] = useReducer(PreferenceReducer, initialState);\n\n  const setStartNextOnStop = async (entry) => {\n    dispatch({\n      type: SET_STARTNEXT_ONSTOP,\n      payload: entry\n    })\n  }\n\n  const setFilter = async () => {\n    dispatch({\n      type: SET_FILTER\n    })\n  }\n\n  const clearFilter = async () => {\n    dispatch({\n      type: CLEAR_FILTER\n    })\n  }\n\n  return (\n    <PrefenceContext.Provider\n      value={{\n        startnextonstop: state.startnextonstop,\n        filterbybilleable: state.filterbybilleable,\n        setStartNextOnStop,\n        setFilter,\n        clearFilter\n      }}\n    >\n      {props.children}\n    </PrefenceContext.Provider>\n  );\n};\n\nexport default PreferenceState;","import React, { useEffect } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Main from './components/layout/Main';\nimport EntryState from './context/entry/entryState';\nimport HealthState from './context/health/healthState';\nimport PreferenceState from './context/preference/preferenceState';\n\n\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n\n  return (\n    <PreferenceState>\n      <HealthState>\n        <EntryState>\n          <div>\n            <Navbar title=\"A+ TimeTrack\" />\n            <Main />\n          </div>\n        </EntryState>\n      </HealthState>\n    </PreferenceState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}